name: Build and Release Exams Application  

on:  
  push:  
    tags:
        - "v*"
  release:  
    types:  
      - created  
env: 
  PROJECT_PATH: Exams/Exams.csproj
  SOLUTION_NAME: Exams.sln

jobs:  
  build:  
    runs-on: windows-latest  

    steps:  
      - name: Checkout code  
        uses: actions/checkout@v2  

      - name: Setup .NET  
        uses: actions/setup-dotnet@v2  
        with:  
          dotnet-version: '8.0.x' # Specify the version of .NET you're using  

      - name: Restore dependencies  
        run: dotnet restore ${{ env.SOLUTION_NAME }} # Specify your solution or project file  

      - name: Build  
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore # Configure for your project  

      # - name: Run tests  
      #   run: dotnet test ${{ env.PROJECT_PATH }} --configuration Release --no-build --verbosity normal  

      - name: Publish  
        run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --output ./publish  

  release:  
    runs-on: ubuntu-latest  
    needs: build  
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v2  

      - name: Check if the release exists  
        id: check_release  
        run: |  
          RELEASE_URL=$(curl --silent --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref }} | jq -r '.url')  
          if [ "$RELEASE_URL" != "null" ]; then  
            echo "Release already exists."  
            echo "::set-output name=exists::true"  
          else  
            echo "::set-output name=exists::false"  
          fi  

      - name: Create Release  
        if: steps.check_release.outputs.exists == 'false'
        id: create_release  
        uses: softprops/action-gh-release@v1  
        with:  
          tag_name: ${{ github.ref }}  
          release_name: Release ${{ github.ref }}  
          body: |  
            Release notes for version ${{ github.ref }}.  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

      - name: Upload Release Asset  
        uses: softprops/action-gh-release@v1  
        with:  
          tag_name: ${{ github.ref }}  
          asset_path: ./release/Exams.exe # Adjust according to your output  
          asset_name: Exams-v${{ github.ref }}.exe # Change this based on your needs  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}